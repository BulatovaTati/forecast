{"mappings":"YAuDA,IAAIA,EAAU,CACZC,OAAQ,mCACRC,aAAc,SAAUC,G,WACtBC,MACE,qDACED,EACA,uBACAE,KAAKJ,QAENK,MAAK,SAAAC,GACJ,OAAOA,EAASC,M,IAEjBF,MAAK,SAAAG,G,OAAQC,EAAKC,eAAeF,E,KAEtCE,eAAgB,SAAUF,GACR,OAAZA,EAAKG,IAuBb,SAAoBH,GAClB,IAAMI,EAAWJ,EAATI,KACsBC,EAAAL,EAAKM,QAAQ,GAAnCC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACMC,EAAAT,EAAKU,KAAxBC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,SACRC,EAAYb,EAAKc,KAAfD,MAERE,SAASC,cAAc,kBAAkBC,UAAY,cAAgBb,EACrEW,SAASC,cAAc,SAASE,MAAMC,gBACpC,yCAA2CX,EAAO,WAEpDO,SAASC,cAAc,uBAAuBC,UAAYN,EAAO,KACjEI,SAASC,cAAc,wBAAwBC,UAAYV,EAC3DQ,SAASC,cAAc,aAAaC,UAAY,aAAeL,EAAW,IAC1EG,SAASC,cAAc,SAASC,UAAY,SAAWJ,EAAQ,QAC/DE,SAASC,cAAc,aAAaI,UAAUC,OAAO,WACrDN,SAASO,KAAKJ,MAAMC,gBAClB,8CAAgDZ,EAAc,KAChEQ,SAASC,cAAc,uBAAuBE,MAAMK,SAAW,WAC/DR,SAASC,cAAc,uBAAuBE,MAAMM,WAAa,UACjET,SAASC,cAAc,aAAaE,MAAMK,SAAW,WACrDR,SAASC,cAAc,aAAaE,MAAMM,WAAa,UACvDT,SAASC,cAAc,SAASE,MAAMK,SAAW,WACjDR,SAASC,cAAc,SAASE,MAAMM,WAAa,S,CA5C/CC,CAAWzB,GACU,OAAZA,EAAKG,KA+ClBY,SAASC,cAAc,kBAAkBC,UAAY,wBACrDF,SAASC,cAAc,uBAAuBE,MAAMK,SAAW,WAC/DR,SAASC,cAAc,uBAAuBE,MAAMM,WAAa,SACjET,SAASC,cAAc,aAAaE,MAAMK,SAAW,WACrDR,SAASC,cAAc,aAAaE,MAAMM,WAAa,SACvDT,SAASC,cAAc,SAASE,MAAMK,SAAW,WACjDR,SAASC,cAAc,SAASE,MAAMM,WAAa,WAInDT,SAASC,cAAc,kBAAkBC,UAAY,iBACrDF,SAASC,cAAc,uBAAuBE,MAAMK,SAAW,WAC/DR,SAASC,cAAc,uBAAuBE,MAAMM,WAAa,SACjET,SAASC,cAAc,aAAaE,MAAMK,SAAW,WACrDR,SAASC,cAAc,aAAaE,MAAMM,WAAa,SACvDT,SAASC,cAAc,SAASE,MAAMK,SAAW,WACjDR,SAASC,cAAc,SAASE,MAAMM,WAAa,S,EAzDnDE,OAAQ,WACN9B,KAAKH,aAAasB,SAASC,cAAc,eAAeW,M,GAI5DZ,SAASC,cAAc,kBAAkBY,iBAAiB,SAAS,WACjErC,EAAQmC,Q,IAEVX,SACGC,cAAc,eACdY,iBAAiB,SAAS,SAAUC,GAClB,SAAbA,EAAMC,KAAgBvC,EAAQmC,Q,IAEtCnC,EAAQE,aAAa,O","sources":["src/index.js"],"sourcesContent":["// import './sass/index.scss';\n\n// // Openweathermap API. Do not share it publicly.\n// const api = '98661ae9c9d5d19ba10e69ef45ab849d'; //Replace with your API\n\n// const iconImg = document.getElementById('weather-icon');\n// const loc = document.querySelector('#location');\n// const tempC = document.querySelector('.c');\n// const tempF = document.querySelector('.f');\n// const desc = document.querySelector('.desc');\n// const sunriseDOM = document.querySelector('.sunrise');\n// const sunsetDOM = document.querySelector('.sunset');\n\n// window.addEventListener('load', () => {\n//   let long;\n//   let lat;\n//   // Accesing Geolocation of User\n//   if (navigator.geolocation) {\n//     navigator.geolocation.getCurrentPosition(position => {\n//       // Storing Longitude and Latitude in variables\n//       long = position.coords.longitude;\n//       lat = position.coords.latitude;\n//       const base = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&appid=${api}&units=metric`;\n\n//       // Using fetch to get data\n//       fetch(base)\n//         .then(response => {\n//           return response.json();\n//         })\n//         .then(data => {\n//           console.log('data: ', data);\n//           const { temp, feels_like } = data.main;\n//           const place = data.name;\n//           const { description, icon } = data.weather[0];\n//           const { sunrise, sunset } = data.sys;\n\n//           const iconUrl = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n//           const fahrenheit = (temp * 9) / 5 + 32;\n\n//           // Converting Epoch(Unix) time to GMT\n//           const sunriseGMT = new Date(sunrise * 1000);\n//           const sunsetGMT = new Date(sunset * 1000);\n\n//           // Interacting with DOM to show data\n//           iconImg.src = iconUrl;\n//           loc.textContent = `${place}`;\n//           desc.textContent = `${description}`;\n//           tempC.textContent = `${temp.toFixed(2)} °C`;\n//           tempF.textContent = `${fahrenheit.toFixed(2)} °F`;\n//           sunriseDOM.textContent = `${sunriseGMT.toLocaleDateString()}, ${sunriseGMT.toLocaleTimeString()}`;\n//           sunsetDOM.textContent = `${sunsetGMT.toLocaleDateString()}, ${sunsetGMT.toLocaleTimeString()}`;\n//         });\n//     });\n//   }\n// });\nlet weather = {\n  apikey: '98661ae9c9d5d19ba10e69ef45ab849d',\n  fetchWeather: function (city) {\n    fetch(\n      'https://api.openweathermap.org/data/2.5/weather?q=' +\n        city +\n        '&units=metric&appid=' +\n        this.apikey\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => this.displayWeather(data));\n  },\n  displayWeather: function (data) {\n    if (data.cod == '200') {\n      getweather(data);\n    } else if (data.cod == '400') {\n      noinput(data);\n    } else {\n      citynotfound(data);\n    }\n  },\n  search: function () {\n    this.fetchWeather(document.querySelector('.search-bar').value);\n  },\n};\n\ndocument.querySelector('.search button').addEventListener('click', function () {\n  weather.search();\n});\ndocument\n  .querySelector('.search-bar')\n  .addEventListener('keyup', function (event) {\n    if (event.key == 'Enter') weather.search();\n  });\nweather.fetchWeather('Kyiv');\n\nfunction getweather(data) {\n  const { name } = data;\n  const { description, icon } = data.weather[0];\n  const { temp, humidity } = data.main;\n  const { speed } = data.wind;\n  // console.log(name, icon, description, temp, humidity, speed);\n  document.querySelector('.location-city').innerHTML = 'Weather in ' + name;\n  document.querySelector('.icon').style.backgroundImage =\n    'url(https://openweathermap.org/img/wn/' + icon + '@2x.png)';\n\n  document.querySelector('.temperature-degree').innerHTML = temp + '°C';\n  document.querySelector('.weather-description').innerHTML = description;\n  document.querySelector('.humidity').innerHTML = 'Humidity: ' + humidity + '%';\n  document.querySelector('.wind').innerHTML = 'Wind: ' + speed + 'Km/hr';\n  document.querySelector('.weather ').classList.remove('loading');\n  document.body.style.backgroundImage =\n    \"url('https://source.unsplash.com/1600x900/?\" + description + \"')\";\n  document.querySelector('.temperature-degree').style.position = 'relative';\n  document.querySelector('.temperature-degree').style.visibility = 'visible';\n  document.querySelector('.humidity').style.position = 'relative';\n  document.querySelector('.humidity').style.visibility = 'visible';\n  document.querySelector('.wind').style.position = 'relative';\n  document.querySelector('.wind').style.visibility = 'visible';\n}\n\nfunction noinput(data) {\n  document.querySelector('.location-city').innerHTML = 'Something went wrong!';\n  document.querySelector('.temperature-degree').style.position = 'absolute';\n  document.querySelector('.temperature-degree').style.visibility = 'hidden';\n  document.querySelector('.humidity').style.position = 'absolute';\n  document.querySelector('.humidity').style.visibility = 'hidden';\n  document.querySelector('.wind').style.position = 'absolute';\n  document.querySelector('.wind').style.visibility = 'hidden';\n}\n\nfunction citynotfound(data) {\n  document.querySelector('.location-city').innerHTML = 'City not found';\n  document.querySelector('.temperature-degree').style.position = 'absolute';\n  document.querySelector('.temperature-degree').style.visibility = 'hidden';\n  document.querySelector('.humidity').style.position = 'absolute';\n  document.querySelector('.humidity').style.visibility = 'hidden';\n  document.querySelector('.wind').style.position = 'absolute';\n  document.querySelector('.wind').style.visibility = 'hidden';\n}\n"],"names":["$b8f9b7833fa37166$var$weather","apikey","fetchWeather","city","fetch","this","then","response","json","data","_this","displayWeather","cod","name","ref","weather","description","icon","_main","main","temp","humidity","speed","wind","document","querySelector","innerHTML","style","backgroundImage","classList","remove","body","position","visibility","$b8f9b7833fa37166$var$getweather","search","value","addEventListener","event","key"],"version":3,"file":"index.3295eaaa.js.map"}